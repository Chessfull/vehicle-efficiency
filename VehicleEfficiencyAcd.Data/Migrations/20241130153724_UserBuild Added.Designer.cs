// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleEfficiencyAcd.Data.Context;

#nullable disable

namespace VehicleEfficiencyAcd.Data.Migrations
{
    [DbContext(typeof(VehicleEfficiencyAcdDbContext))]
    [Migration("20241130153724_UserBuild Added")]
    partial class UserBuildAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleEfficiencyAcd.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleEfficiencyAcd.Data.Entities.VehicleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 30, 18, 37, 23, 750, DateTimeKind.Local).AddTicks(3797),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 37, 23, 751, DateTimeKind.Local).AddTicks(4067),
                            Name = "Renault Clio",
                            Plate = "26 KL 300"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 30, 18, 37, 23, 751, DateTimeKind.Local).AddTicks(7748),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 37, 23, 751, DateTimeKind.Local).AddTicks(7751),
                            Name = "Renault Clio",
                            Plate = "26 KL 200"
                        });
                });

            modelBuilder.Entity("VehicleEfficiencyAcd.Data.Entities.VehicleUsageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActiveHours")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaintenanceHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Week")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleUsages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveHours = 2.0,
                            CreatedDate = new DateTime(2024, 11, 30, 18, 37, 23, 756, DateTimeKind.Local).AddTicks(7281),
                            IsDeleted = false,
                            MaintenanceHours = 1.0,
                            ModifiedDate = new DateTime(2024, 11, 30, 18, 37, 23, 756, DateTimeKind.Local).AddTicks(7284),
                            VehicleId = 1,
                            Week = new DateTime(2024, 11, 30, 18, 37, 23, 756, DateTimeKind.Local).AddTicks(7569)
                        });
                });

            modelBuilder.Entity("VehicleEfficiencyAcd.Data.Entities.VehicleUsageEntity", b =>
                {
                    b.HasOne("VehicleEfficiencyAcd.Data.Entities.VehicleEntity", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
